{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/button.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/images/search.png"],"names":["Inner","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","Img","StyledButton","Button","NotFoundPage","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","src","require","to","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_5__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","array","arrayOf","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__","Link","className","restProps","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","node","Container","styled_base_browser_esm","ContainerInner","Heading","Header","siteTitle","core_browser_esm","Footer","Layout","gatsby_browser_entry","react_default","Fragment","header","_755544856","__webpack_require__","p"],"mappings":"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","file":"component---src-pages-404-js-014fe998713942cf3f0c.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Button from '../components/button';\n\nconst Inner = styled.div`\n  padding: 50px 0 0;\n  text-align: center;\n`;\n\nconst Img = styled.img`\n  display: inline-block;\n  height: auto;\n  max-width: 300px;\n  width: 100%;\n`;\n\nconst StyledButton = styled(Button)`\n  line-height: 60px;\n  margin-bottom: 50px;\n  max-width: 200px;\n`;\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <Inner>\n      <Img src={require('../images/search.png')} />\n      <h3>PAGE NOT FOUND</h3>\n      <p>You just hit a route that doesn&#39;t exist...</p>\n      <StyledButton to=\"/\">Go Back</StyledButton>\n    </Inner>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`${data.site.siteMetadata.title} | %s`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                name: 'robots',\n                content: 'NOINDEX, NOFOLLOW',\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\n\nexport const StyledButton = styled(Link)`\n  background-color: #ffffff;\n  border: 1px solid #444444;\n  display: inline-block;\n  line-height: 90px;\n  max-width: 300px;\n  padding: 0 30px;\n  text-decoration: none;\n  text-transform: uppercase;\n  transition: all 0.4s ease-in-out;\n  transition-property: background-color, box-shadow, color, transform;\n  width: 100%;\n\n  &:hover {\n    background-color: #444444;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n    color: #ffffff;\n    transform: scale(1.1);\n  }\n`;\n\nconst Button = ({ to, children, className, ...restProps }) => (\n  <StyledButton to={to} className={className} {...restProps}>\n    {children}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  to: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled'\n\nconst Container = styled.div`\n  background: #fff;\n  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n`;\n\nconst ContainerInner = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 1rem 1.0875rem;\n  text-align: center;\n`;\n\nconst Heading = styled.h1`\n  margin: 0;\n  font-size: 1.5rem;\n  font-weight: 300;\n  line-height: 1;\n`;\n\nconst Header = ({ siteTitle }) => (\n  <Container>\n    <ContainerInner>\n      <Heading>{siteTitle}</Heading>\n    </ContainerInner>\n  </Container>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Header from './header';\n\nconst Inner = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0 1.0875rem 1.45rem;\n`;\n\nconst Footer = styled.footer`\n  font-size: .7rem;\n  text-align: center;\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <React.Fragment>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Inner>\n          {children}\n          <Footer>Hello World, &copy; 2019</Footer>\n        </Inner>\n      </React.Fragment>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","module.exports = __webpack_public_path__ + \"static/search-445f2174d9b978e9cb0e91bf192bb937.png\";"],"sourceRoot":""}